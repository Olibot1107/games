"use strict";(function (){let socket,buttons,message,connect,score,points={draw:0,win:0,lose:0},count
  function bind(){socket.on("updateCount",(arg)=>{console.log("connected: "+arg);count=arg;SetMessageConnect(count);SetMessage("session connected")});socket.on("setUser",(arg1,arg2,arg3,arg4,arg5)=>{console.log("...setuser... "+arg1+', '+arg2+", X:"+arg3+", Y:"+arg4);SetUser(arg1,arg2,arg3,arg4,arg5)});socket.on("updateLoc",(arg1,arg2,arg3)=>{console.log("new location for "+arg1+" X:"+arg2+', Y:'+arg3);SetClientPosition(arg1,arg2,arg3)});socket.on("updateUserLoc",(arg1,arg2,arg3)=>{SetOpponentPosition(arg1,arg2,arg3)});socket.on("sendCombat",(arg1)=>{SetCombatZone(arg1);disableButtons()});socket.on("end",()=>{SetMessageConnect(count)});socket.on("connect",()=>{SetMessage("session connected");SetMessageConnect(count)});socket.on("disconnect",()=>{SetMessage("connection lost");SetMessageConnect("attempting to reconnect...")
    RefreshOnConnection()});socket.on("error",()=>{SetMessage("connection error");SetMessageConnect("attempting to reconnect...")});for(let i=0;i<buttons.length;i++){((button,move)=>{button.addEventListener("click",function (e){socket.emit("move",move)},!1)})(buttons[i],i+1)}}
  function init(){socket=io({path:location.pathname+'socket.io',upgrade:!1,transports:["websocket"]});buttons=document.getElementsByTagName("button");message=document.getElementById("message");connect=document.getElementById("connect");score=document.getElementById("score");count=0;bind()}
  window.addEventListener("load",init,!1)})()