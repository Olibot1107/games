const canvas=document.getElementById("gameCanvas"),ctx=canvas.getContext("2d"),sprites={player:new Image,dog:new Image,crow:new Image,rat:new Image,paw:new Image};let spritesLoaded=0;const totalSprites=Object.keys(sprites).length;function onSpriteLoad(){spritesLoaded++,console.log(`Sprite loaded: ${spritesLoaded}/${totalSprites}`),spritesLoaded===totalSprites&&(console.log("All sprites loaded successfully"),gameState.player.width=38,gameState.player.height=38,"loading"===document.readyState?document.addEventListener("DOMContentLoaded",initializeGame):initializeGame())}function onSpriteError(e){console.error(`Error loading ${e} sprite`),++spritesLoaded===totalSprites&&startGame()}function getHighScore(){return parseInt(localStorage.getItem("catto_highscore")||"0")}function updateHighScoreDisplay(){let e=getHighScore();document.getElementById("displayHighScore").textContent=e,document.getElementById("previewHighScore").textContent=e,document.getElementById("currentScore").textContent=gameState.kills}function startGameFromOverlay(){document.getElementById("startOverlay").style.display="none",startGame()}function initializeGame(){updateHighScoreDisplay(),document.getElementById("startOverlay").style.display="flex"}sprites.player.onload=onSpriteLoad,sprites.player.onerror=()=>onSpriteError("player"),sprites.player.src="assets/neko.png",sprites.dog.onload=onSpriteLoad,sprites.dog.onerror=()=>onSpriteError("dog"),sprites.dog.src="assets/dog.png",sprites.crow.onload=onSpriteLoad,sprites.crow.onerror=()=>onSpriteError("crow"),sprites.crow.src="assets/crow.png",sprites.rat.onload=onSpriteLoad,sprites.rat.onerror=()=>onSpriteError("rat"),sprites.rat.src="assets/rat.png",sprites.paw.onload=onSpriteLoad,sprites.paw.onerror=()=>onSpriteError("paw"),sprites.paw.src="assets/paw.png";let gameState={player:{x:600,y:400,hp:100,maxHp:100,level:1,xp:0,xpNext:10,speed:3,width:38,height:38,facingLeft:!1},time:0,kills:0,paused:!1,gameOver:!1};const abilities={clawOrbit:{name:"Claw Orbit",level:1,maxLevel:5,claws:[],rotation:0,damage:12,speed:2.2,descriptions:["2 claws rotate steadily","Claws rotate faster, +25% damage","Adds 2 more claws (total 4)","Claws grow larger, +30% damage","Max speed, claws leave damaging afterimages"]},whiskerWhip:{name:"Whisker Whip",level:0,maxLevel:5,cooldown:0,maxCooldown:120,damage:25,range:80,descriptions:["Fires a whip forward every 2 seconds","Cooldown reduced","Whip length increased","Hits pierce through multiple enemies","Whip splits into two directions"]},hairballBurst:{name:"Hairball Burst",level:0,maxLevel:5,cooldown:0,maxCooldown:180,damage:20,count:1,descriptions:["Fires one hairball in random direction","Damage increased","+1 extra hairball","Hairballs bounce once after hitting","Hairballs explode into fragments"]},pawSlam:{name:"Paw Slam",level:0,maxLevel:5,cooldown:0,maxCooldown:150,damage:30,radius:60,descriptions:["Small AoE slam around the cat","Damage +20%","Larger radius","Leaves burning paw print","Double slam (hits twice)"]},catNap:{name:"Cat Nap",level:0,maxLevel:5,cooldown:0,maxCooldown:1800,healing:20,descriptions:["Recover small HP after 30 sec","Also reduces damage taken by 5%","Heal amount increased","Gain brief invulnerability after napping","Auto-heal every 20 sec"]}};let enemies=[],projectiles=[],xpOrbs=[],particles=[];const enemyTypes={rat:{name:"Street Rat",hp:12,speed:.7,damage:2,color:"#8B4513",size:8,xpValue:2},dog:{name:"Stray Dog",hp:30,speed:1.5,damage:6,color:"#654321",size:12,xpValue:4},crow:{name:"Cursed Crow",hp:40,speed:1.2,damage:5,color:"#2F2F2F",size:10,xpValue:6}},keys={};function initClawOrbit(){abilities.clawOrbit.claws=[];let e=abilities.clawOrbit.level>=3?4:2;for(let t=0;t<e;t++)abilities.clawOrbit.claws.push({angle:2*Math.PI/e*t,distance:55})}function updatePlayer(){(keys.w||keys.arrowup)&&(gameState.player.y-=gameState.player.speed),(keys.s||keys.arrowdown)&&(gameState.player.y+=gameState.player.speed),(keys.a||keys.arrowleft)&&(gameState.player.x-=gameState.player.speed,gameState.player.facingLeft=!0),(keys.d||keys.arrowright)&&(gameState.player.x+=gameState.player.speed,gameState.player.facingLeft=!1),gameState.player.x=Math.max(30,Math.min(canvas.width-30,gameState.player.x)),gameState.player.y=Math.max(30,Math.min(canvas.height-30,gameState.player.y))}function updateAbilities(){if(abilities.clawOrbit.level>0){let e=abilities.clawOrbit.level>=2?2:1,t=abilities.clawOrbit.level>=5?4:e;abilities.clawOrbit.rotation+=abilities.clawOrbit.speed*t*.02,abilities.clawOrbit.claws.forEach((e=>{let t=gameState.player.x+Math.cos(abilities.clawOrbit.rotation+e.angle)*e.distance,a=gameState.player.y+Math.sin(abilities.clawOrbit.rotation+e.angle)*e.distance;e.x=t,e.y=a}))}if(Object.values(abilities).forEach((e=>{e.cooldown>0&&e.cooldown--})),abilities.whiskerWhip.level>0&&abilities.whiskerWhip.cooldown<=0){fireWhiskerWhip();let e=abilities.whiskerWhip.maxCooldown;abilities.whiskerWhip.level>=2&&(e*=.7),abilities.whiskerWhip.cooldown=e}if(abilities.hairballBurst.level>0&&abilities.hairballBurst.cooldown<=0&&(fireHairball(),abilities.hairballBurst.cooldown=abilities.hairballBurst.maxCooldown),abilities.pawSlam.level>0&&abilities.pawSlam.cooldown<=0&&(pawSlam(),abilities.pawSlam.cooldown=abilities.pawSlam.maxCooldown),abilities.catNap.level>0&&abilities.catNap.cooldown<=0){catNap();let e=abilities.catNap.maxCooldown;abilities.catNap.level>=5&&(e=1200),abilities.catNap.cooldown=e}}function fireWhiskerWhip(){(abilities.whiskerWhip.level>=5?[0,Math.PI]:[0]).forEach((e=>{projectiles.push({x:gameState.player.x,y:gameState.player.y,dx:4*Math.cos(e),dy:4*Math.sin(e),damage:abilities.whiskerWhip.damage,range:abilities.whiskerWhip.level>=3?120:80,pierce:abilities.whiskerWhip.level>=4,type:"whip",life:0})}))}function fireHairball(){let e=abilities.hairballBurst.level>=3?2:1;for(let t=0;t<e;t++){let e=Math.random()*Math.PI*2,t=abilities.hairballBurst.damage;abilities.hairballBurst.level>=2&&(t*=1.5),projectiles.push({x:gameState.player.x,y:gameState.player.y,dx:3*Math.cos(e),dy:3*Math.sin(e),damage:t,bounce:abilities.hairballBurst.level>=4,explode:abilities.hairballBurst.level>=5,type:"hairball",life:0})}}function pawSlam(){let e=abilities.pawSlam.radius;abilities.pawSlam.level>=3&&(e*=1.5);let t=abilities.pawSlam.damage;abilities.pawSlam.level>=2&&(t*=1.2),enemies.forEach((a=>{Math.hypot(a.x-gameState.player.x,a.y-gameState.player.y)<=e&&(a.hp-=t,abilities.pawSlam.level>=5&&setTimeout((()=>{a.hp-=.5*t}),200))})),particles.push({x:gameState.player.x,y:gameState.player.y,radius:e,life:30,type:"slam"})}function catNap(){let e=abilities.catNap.healing;abilities.catNap.level>=3&&(e*=1.5),gameState.player.hp=Math.min(100,gameState.player.hp+e),abilities.catNap.level>=4&&(gameState.player.invulnerable=180)}function spawnEnemies(){let e=5*Math.floor(gameState.time/1800),t=3*Math.floor(gameState.player.level/3);if(enemies.length>=Math.min(15+e+t,50))return;let a=Math.floor(gameState.time/1500)+1,l=gameState.time%1500;if(Math.random()<(.008+Math.min(.002*a,.015)+Math.min(.002*gameState.player.level,.02))*(l<600?2:1)){let e="rat";if(a>=4&&gameState.player.level>=5){let t=Math.random();e=t<.4?"rat":t<.7?"dog":"crow"}else e=a>=2&&gameState.player.level>=2?.6>Math.random()?"rat":"dog":"rat";let t,l,i=enemyTypes[e],r=(1+.12*(a-1))*(1+.05*(gameState.player.level-1));switch(Math.floor(4*Math.random())){case 0:t=Math.random()*canvas.width,l=-20;break;case 1:t=canvas.width+20,l=Math.random()*canvas.height;break;case 2:t=Math.random()*canvas.width,l=canvas.height+20;break;case 3:t=-20,l=Math.random()*canvas.height}enemies.push({x:t,y:l,hp:Math.floor(i.hp*r),maxHp:Math.floor(i.hp*r),speed:i.speed*Math.min(r,2.5),damage:Math.floor(i.damage*r),color:i.color,size:i.size,xpValue:Math.floor(i.xpValue*Math.max(r,1.2)),type:e,wave:a,facingLeft:!1})}}function updateEnemies(){enemies.forEach(((e,t)=>{let a=gameState.player.x-e.x,l=gameState.player.y-e.y,i=Math.hypot(a,l);if(i>0&&(e.x+=a/i*e.speed,e.y+=l/i*e.speed,"crow"===e.type&&(e.facingLeft=a<0)),i<e.size+20&&(!gameState.player.invulnerable||gameState.player.invulnerable<=0)){let a=abilities.catNap.level>=2?.95:1,l=Math.max(1,Math.floor(e.damage*a));gameState.player.hp-=l,gameState.player.invulnerable=60,enemies.splice(t,1),gameState.player.hp<=0&&gameOver()}abilities.clawOrbit.level>0&&abilities.clawOrbit.claws.forEach((t=>{if(Math.hypot(t.x-e.x,t.y-e.y)<(abilities.clawOrbit.level>=4?20:16)+e.size){let t=abilities.clawOrbit.damage;if(abilities.clawOrbit.level>=2&&(t*=1.25),abilities.clawOrbit.level>=4&&(t*=1.3),abilities.clawOrbit.level>=5){let t=Math.floor(.4*abilities.clawOrbit.damage);setTimeout((()=>{e.hp-=t}),150)}e.hp-=t}})),e.hp<=0&&(dropXP(e.x,e.y,e.xpValue),enemies.splice(t,1),gameState.kills++)})),gameState.player.invulnerable>0&&gameState.player.invulnerable--}function updateProjectiles(){projectiles.forEach(((e,t)=>{e.x+=e.dx,e.y+=e.dy,e.life++,enemies.forEach(((a,l)=>{Math.hypot(e.x-a.x,e.y-a.y)<a.size+5&&(a.hp-=e.damage,e.pierce||projectiles.splice(t,1))})),(e.x<-50||e.x>canvas.width+50||e.y<-50||e.y>canvas.height+50||e.life>e.range)&&projectiles.splice(t,1)}))}function dropXP(e,t,a){.5>Math.random()&&xpOrbs.push({x:e,y:t,value:a,life:600})}function updateXP(){xpOrbs.forEach(((e,t)=>{let a=Math.hypot(e.x-gameState.player.x,e.y-gameState.player.y);if(a<30){let t=gameState.player.x-e.x,a=gameState.player.y-e.y;e.x+=.1*t,e.y+=.1*a}a<20&&(gameState.player.xp+=e.value,xpOrbs.splice(t,1),gameState.player.xp>=gameState.player.xpNext&&levelUp()),e.life--,e.life<=0&&xpOrbs.splice(t,1)}))}function levelUp(){gameState.player.level++,gameState.player.xp-=gameState.player.xpNext,gameState.player.level<=5?gameState.player.xpNext=Math.floor(1.12*gameState.player.xpNext):gameState.player.level<=10?gameState.player.xpNext=Math.floor(1.15*gameState.player.xpNext):gameState.player.xpNext=Math.floor(1.18*gameState.player.xpNext),gameState.player.maxHp=100,gameState.player.hp=Math.min(100,gameState.player.hp+20),showLevelUpModal()}function showLevelUpModal(){gameState.paused=!0;let e=document.getElementById("levelUpModal"),t=document.getElementById("upgradeChoices");t.innerHTML="";let a=[];Object.entries(abilities).forEach((([e,t])=>{t.level<t.maxLevel&&a.push({key:e,name:t.name,description:t.descriptions[t.level],isNew:0===t.level})}));let l=[];for(;l.length<2&&a.length>0;){let e=Math.floor(Math.random()*a.length);l.push(a[e]),a.splice(e,1)}l.forEach((e=>{let a=document.createElement("button");a.className="upgrade-choice",a.innerHTML=`\n            <strong>${e.name} ${e.isNew?"(NEW!)":"Lv"+(abilities[e.key].level+1)}</strong><br>\n            ${e.description}\n        `,a.onclick=()=>selectUpgrade(e.key),t.appendChild(a)})),e.style.display="block"}function selectUpgrade(e){abilities[e].level++,"clawOrbit"===e&&initClawOrbit(),document.getElementById("levelUpModal").style.display="none",gameState.paused=!1}function updateParticles(){particles.forEach(((e,t)=>{e.life--,e.life<=0&&particles.splice(t,1)}))}function render(){if(ctx.fillStyle="#1a1a2e",ctx.fillRect(0,0,canvas.width,canvas.height),ctx.save(),gameState.player.invulnerable>0&&(ctx.globalAlpha=.5),sprites.player.complete&&sprites.player.naturalWidth>0)try{let e=Math.round(gameState.player.x-gameState.player.width/2),t=Math.round(gameState.player.y-gameState.player.height/2);gameState.player.facingLeft?(ctx.save(),ctx.scale(-1,1),ctx.drawImage(sprites.player,-e-gameState.player.width,t,gameState.player.width,gameState.player.height),ctx.restore()):ctx.drawImage(sprites.player,e,t,gameState.player.width,gameState.player.height)}catch(e){console.error("Error drawing sprite:",e),ctx.fillStyle="#FFA500",ctx.beginPath(),ctx.arc(gameState.player.x,gameState.player.y,15,0,2*Math.PI),ctx.fill()}else ctx.fillStyle="#FFA500",ctx.beginPath(),ctx.arc(gameState.player.x,gameState.player.y,15,0,2*Math.PI),ctx.fill();ctx.restore(),abilities.clawOrbit.level>0&&abilities.clawOrbit.claws.forEach((e=>{let t=abilities.clawOrbit.level>=4?40:32;if(sprites.paw&&sprites.paw.complete&&sprites.paw.naturalWidth>0)try{ctx.drawImage(sprites.paw,Math.round(e.x-t/2),Math.round(e.y-t/2),t,t)}catch(a){console.error("Error drawing paw sprite:",a),ctx.fillStyle="#FF4444",ctx.beginPath(),ctx.arc(e.x,e.y,t/2,0,2*Math.PI),ctx.fill()}else ctx.fillStyle="#FF4444",ctx.beginPath(),ctx.arc(e.x,e.y,t/2,0,2*Math.PI),ctx.fill();if(abilities.clawOrbit.level>=5){let a=gameState.player.x+Math.cos(abilities.clawOrbit.rotation+e.angle-.2)*e.distance,l=gameState.player.y+Math.sin(abilities.clawOrbit.rotation+e.angle-.2)*e.distance;if(sprites.paw&&sprites.paw.complete&&sprites.paw.naturalWidth>0)try{ctx.save(),ctx.globalAlpha=.3,ctx.drawImage(sprites.paw,Math.round(a-t/2),Math.round(l-t/2),t,t),ctx.restore()}catch(e){ctx.fillStyle="rgba(255, 68, 68, 0.3)",ctx.beginPath(),ctx.arc(a,l,t/2,0,2*Math.PI),ctx.fill()}else ctx.fillStyle="rgba(255, 68, 68, 0.3)",ctx.beginPath(),ctx.arc(a,l,t/2,0,2*Math.PI),ctx.fill()}})),enemies.forEach((e=>{let t=Math.round(e.x-24),a=Math.round(e.y-24);if(sprites[e.type]&&sprites[e.type].complete&&sprites[e.type].naturalWidth>0)try{"crow"===e.type&&e.facingLeft?(ctx.save(),ctx.scale(-1,1),ctx.drawImage(sprites[e.type],-t-48,a,48,48),ctx.restore()):ctx.drawImage(sprites[e.type],t,a,48,48)}catch(t){console.error(`Error drawing ${e.type} sprite:`,t),ctx.fillStyle=e.color,ctx.beginPath(),ctx.arc(e.x,e.y,e.size,0,2*Math.PI),ctx.fill()}else ctx.fillStyle=e.color,ctx.beginPath(),ctx.arc(e.x,e.y,e.size,0,2*Math.PI),ctx.fill();e.hp<e.maxHp&&(ctx.fillStyle="red",ctx.fillRect(e.x-e.size,e.y-e.size-15,2*e.size,3),ctx.fillStyle="green",ctx.fillRect(e.x-e.size,e.y-e.size-15,e.hp/e.maxHp*e.size*2,3))})),projectiles.forEach((e=>{ctx.fillStyle="whip"===e.type?"#9966CC":"#8B4513",ctx.beginPath(),ctx.arc(e.x,e.y,4,0,2*Math.PI),ctx.fill()})),xpOrbs.forEach((e=>{ctx.fillStyle="#00FF00",ctx.beginPath(),ctx.arc(e.x,e.y,5,0,2*Math.PI),ctx.fill()})),particles.forEach((e=>{"slam"===e.type&&(ctx.strokeStyle=`rgba(255, 165, 0, ${e.life/30})`,ctx.lineWidth=3,ctx.beginPath(),ctx.arc(e.x,e.y,e.radius,0,2*Math.PI),ctx.stroke())}))}function updateUI(){let e=Math.max(0,gameState.player.hp)/gameState.player.maxHp*100;document.getElementById("hpBar").style.width=e+"%",document.getElementById("hpText").textContent=`${Math.max(0,gameState.player.hp)}/${gameState.player.maxHp}`;let t=gameState.player.xp/gameState.player.xpNext*100;document.getElementById("xpBar").style.width=t+"%",document.getElementById("xpText").textContent=`${gameState.player.xp}/${gameState.player.xpNext}`;let a=Math.floor(gameState.time/1500)+1,l=5*Math.floor(gameState.time/1800),i=3*Math.floor(gameState.player.level/3);document.getElementById("level").textContent=gameState.player.level,document.getElementById("time").textContent=Math.floor(gameState.time/60),document.getElementById("wave").textContent=a,document.getElementById("kills").textContent=gameState.kills,document.getElementById("enemyCount").textContent=enemies.length,document.getElementById("enemyCap").textContent=Math.min(15+l+i,50),document.getElementById("currentScore").textContent=gameState.kills}function gameOver(){gameState.gameOver=!0;let e=gameState.kills,t=getHighScore();e>t&&localStorage.setItem("catto_highscore",e),document.getElementById("finalScore").textContent=e,document.getElementById("highScore").textContent=Math.max(t,e),document.getElementById("finalTime").textContent=Math.floor(gameState.time/60),document.getElementById("gameOver").style.display="block",updateHighScoreDisplay()}function startGame(){gameState={player:{x:600,y:400,hp:100,maxHp:100,level:1,xp:0,xpNext:10,speed:3,width:38,height:38,facingLeft:!1},time:0,kills:0,paused:!1,gameOver:!1},Object.values(abilities).forEach((e=>{e.level="Claw Orbit"===e.name?1:0,e.cooldown=0})),enemies.length=0,projectiles.length=0,xpOrbs.length=0,particles.length=0,initClawOrbit(),document.getElementById("gameOver").style.display="none",document.getElementById("levelUpModal").style.display="none",document.getElementById("startOverlay").style.display="none",gameLoop()}function gameLoop(){gameState.gameOver||(gameState.paused||(gameState.time++,updatePlayer(),updateAbilities(),spawnEnemies(),updateEnemies(),updateProjectiles(),updateXP(),updateParticles()),render(),updateUI(),requestAnimationFrame(gameLoop))}document.addEventListener("keydown",(e=>keys[e.key.toLowerCase()]=!0)),document.addEventListener("keyup",(e=>keys[e.key.toLowerCase()]=!1)),document.addEventListener("DOMContentLoaded",(()=>{initializeGame()}));